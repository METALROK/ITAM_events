services:
  pybackend:
    restart: always

    env_file: .env

    build:
      context: backend/event_logic
      dockerfile: Dockerfile
    depends_on:
      - postgres
    networks:
      - events_network

  gobackend:
    restart: always

    build:
      context: backend/authorization
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - events_network

  frontend:
    restart: no

    build:
      context: frontend
      dockerfile: Dockerfile
    networks:
      - events_network

  postgres:
    image: postgres:17.0
    env_file: .env
    environment:
      POSTGRES_USER: ${APP_PG__USER}
      POSTGRES_PASSWORD: ${APP_PG__PASSWORD}
      POSTGRES_DB: ${APP_PG__DATABASE}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - "./backend/event_logic/init.sql:/docker-entrypoint-initdb.d/init.sql"
      - "./data/pg/:/var/lib/postgresql/data/"
    networks:
      - events_network

  nginx:
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/:/frontend
    depends_on:
      - pybackend
      - frontend
    networks:
      - events_network

networks:
  events_network:
    driver: bridge
